# sentinel.conf


################################# GENERAL  #################################
# 기본적으로 sentinel에서는 보호모드 비활성화
protected-mode no

# sentinel 이 실행될 포트
# port <sentinel-port>
port 26379

# 기본적으로 sentinel은 데몬으로 실행되지 않는다.
# 데몬화 될 때, /var/run/redis-sentinel.pid 에 pid 파일을 작성한다.
daemonize no
pidfile /var/run/redis-sentinel.pid

# 로그 파일 이름
logfile /var/log/sentinel/sentinel.log

# NAT를 이용하여 로컬주소가 아닌 외부에서 sentinel 연결 시 사용
# sentinel announce-ip <ip>
# sentinel announce-port <port>

# dir <working-directory>
# sentinel의 경우 /tmp로 chdir을 보내는 것이 파일 시스템 마운트 해제와 같은 관리작업을 방해하지 않는 가장 간단한 방법이라고 한다.
dir /tmp


################################# MONITOR #################################
# sentinel이 모니터링할 master 를 등록한다.
# 적어도 <quorum>개의 sentinel이 동의하는 경우에만 O_DOWN(객관적 DOWN) 상태로 고려할 것을 설정
# sentinel monitor <master-name> <ip> <redis-port> <quorum>
sentinel monitor mymaster 127.0.0.1 6379 2

# 모니터링할 마스터,복제 서버의 인증을 위한 requirepass
# 마스터와 복제 서버는 동일 requirepass 를 가지고 있어야 한다.
# sentinel auth-pass <master-name> <password>
# sentinel auth-pass mymaster MySUPER--secret-0123passw0rd

# 버전6(ACL도입) 이상의 redis 서버에 대해 인증하는 데 유용
# redis 서버에서는 다음과 같이 sentinel용 최소 권한을 가진 ACL을 생성해야 한다.
# redis 서버에서: 
#     user sentinel-user >somepassword +client +subscribe +publish \
#                        +ping +info +multi +slaveof +config +client +exec on
#
# sentinel auth-user <master-name> <username>

# S_DOWN(주관적 DOWN) 상태로 간주하기까지의 시간
# sentinel이 마스터, 복제본, 다른 sentinel에 PING에 대한 응답을 받을 수 없을 때
# DOWN으로 간주하는 시간
#
# sentinel down-after-milliseconds <master-name> <milliseconds>
# Default is 30 seconds.
sentinel down-after-milliseconds mymaster 30000


################################# ACL  #################################
# Redis 6.2 부터 sentinel에서 ACL 기능 지원
#
# Sentinel's ACL users are defined in the following format:
#   user <username> ... acl rules ...
#
# For example:
#   user worker +@admin +@connection ~* on >ffa9203c493aa99

# ACL LOG : 실패한 명령 또는 ACL 관련 인증 이벤트를 추적
# 로그는 메모리에 저장되며, ACL LOG RESET 명령으로 메모리 회수 가능
# 
# ACL LOG의 최대 항목 길이 설정
acllog-max-len 128

# Using an external ACL file
# redis와 동일하게 ACL 파일 사용 가능
#
# aclfile /etc/redis/sentinel-users.acl

# requirepass <password>
#
# 암호 설정 시, 같은 그룹내에 있는 sentinel은 동일한 암호로 설정해야 한다.
# redis 서버 설정 처럼, ACL로 제어할 것을 권고한다. 사용하지 않는 것이 좋다.
# requirepass <password>

# 특정 계정, 패스워드로 username을 사용하여 다른 sentinel로 인증할 수 있다.
# 아래 값을 설정하지 않으면 "default" 사용자와 sentinel-pass로 사용자 인증 시도한다.
# sentinel sentinel-user <username>
# sentinel sentinel-pass <password>

# failover 이후, 새 master가 복제를 동시의 몇대의 replica에 할지 설정
# sentinel parallel-syncs <master-name> <numreplicas>
sentinel parallel-syncs mymaster 1

# failover-timeout을 밀리초 단위로 설정
#
# failover-timeout이 쓰이는 곳: 
# - The time needed to re-start a failover after a previous failover was
#   already tried against the same master by a given Sentinel, is two
#   times the failover timeout.
#
# - The time needed for a replica replicating to a wrong master according
#   to a Sentinel current configuration, to be forced to replicate
#   with the right master, is exactly the failover timeout (counting since
#   the moment a Sentinel detected the misconfiguration).
#
# - The time needed to cancel a failover that is already in progress but
#   did not produced any configuration change (SLAVEOF NO ONE yet not
#   acknowledged by the promoted replica).
#
# - The maximum time a failover in progress waits for all the replicas to be
#   reconfigured as replicas of the new master. However even after this time
#   the replicas will be reconfigured by the Sentinels anyway, but not with
#   the exact parallel-syncs progression as specified.
#
# Default is 3 minutes.
# sentinel failover-timeout <master-name> <milliseconds>
sentinel failover-timeout mymaster 180000

# SCRIPTS EXECUTION
#
# sentinel notification-script and sentinel reconfig-script are used in order
# to configure scripts that are called to notify the system administrator
# or to reconfigure clients after a failover. The scripts are executed
# with the following rules for error handling:
#
# If script exits with "1" the execution is retried later (up to a maximum
# number of times currently set to 10).
#
# If script exits with "2" (or an higher value) the script execution is
# not retried.
#
# If script terminates because it receives a signal the behavior is the same
# as exit code 1.
#
# A script has a maximum running time of 60 seconds. After this limit is
# reached the script is terminated with a SIGKILL and the execution retried.

# NOTIFICATION SCRIPT
#
# sentinel notification-script <master-name> <script-path>
# 
# Call the specified notification script for any sentinel event that is
# generated in the WARNING level (for instance -sdown, -odown, and so forth).
# This script should notify the system administrator via email, SMS, or any
# other messaging system, that there is something wrong with the monitored
# Redis systems.
#
# The script is called with just two arguments: the first is the event type
# and the second the event description.
#
# The script must exist and be executable in order for sentinel to start if
# this option is provided.
#
# Example:
#
# sentinel notification-script mymaster /var/redis/notify.sh

# CLIENTS RECONFIGURATION SCRIPT
#
# sentinel client-reconfig-script <master-name> <script-path>
#
# When the master changed because of a failover a script can be called in
# order to perform application-specific tasks to notify the clients that the
# configuration has changed and the master is at a different address.
# 
# The following arguments are passed to the script:
#
# <master-name> <role> <state> <from-ip> <from-port> <to-ip> <to-port>
#
# <state> is currently always "start"
# <role> is either "leader" or "observer"
# 
# The arguments from-ip, from-port, to-ip, to-port are used to communicate
# the old address of the master and the new address of the elected replica
# (now a master).
#
# This script should be resistant to multiple invocations.
#
# Example:
#
# sentinel client-reconfig-script mymaster /var/redis/reconfig.sh

# SECURITY
#
# By default SENTINEL SET will not be able to change the notification-script
# and client-reconfig-script at runtime. This avoids a trivial security issue
# where clients can set the script to anything and trigger a failover in order
# to get the program executed.

sentinel deny-scripts-reconfig yes

################################# RENAME #################################
# REDIS COMMANDS RENAMING (DEPRECATED)
#
# WARNING: avoid using this option if possible, instead use ACLs.
#
# Sometimes the Redis server has certain commands, that are needed for Sentinel
# to work correctly, renamed to unguessable strings. This is often the case
# of CONFIG and SLAVEOF in the context of providers that provide Redis as
# a service, and don't want the customers to reconfigure the instances outside
# of the administration console.
#
# In such case it is possible to tell Sentinel to use different command names
# instead of the normal ones. For example if the master "mymaster", and the
# associated replicas, have "CONFIG" all renamed to "GUESSME", I could use:
#
# SENTINEL rename-command mymaster CONFIG GUESSME
#
# After such configuration is set, every time Sentinel would use CONFIG it will
# use GUESSME instead. Note that there is no actual need to respect the command
# case, so writing "config guessme" is the same in the example above.
#
# SENTINEL SET can also be used in order to perform this configuration at runtime.
#
# In order to set a command back to its original name (undo the renaming), it
# is possible to just rename a command to itself:
#
# SENTINEL rename-command mymaster CONFIG CONFIG

################################# HOSTNAMES SUPPORT #################################
# HOSTNAMES SUPPORT
#
# Normally Sentinel uses only IP addresses and requires SENTINEL MONITOR
# to specify an IP address. Also, it requires the Redis replica-announce-ip
# keyword to specify only IP addresses.
#
# You may enable hostnames support by enabling resolve-hostnames. Note
# that you must make sure your DNS is configured properly and that DNS
# resolution does not introduce very long delays.
#
SENTINEL resolve-hostnames no

# When resolve-hostnames is enabled, Sentinel still uses IP addresses
# when exposing instances to users, configuration files, etc. If you want
# to retain the hostnames when announced, enable announce-hostnames below.
#
SENTINEL announce-hostnames no

# When master_reboot_down_after_period is set to 0, Sentinel does not fail over
# when receiving a -LOADING response from a master. This was the only supported
# behavior before version 7.0.
#
# Otherwise, Sentinel will use this value as the time (in ms) it is willing to
# accept a -LOADING response after a master has been rebooted, before failing
# over.

SENTINEL master-reboot-down-after-period mymaster 0
